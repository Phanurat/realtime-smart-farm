import network
import urequests
import time
from machine import Pin, ADC

SSID = "10_2.4G"
PASSWORD = ""
SERVER_URL = "https://cause-tokyo-involves-several.trycloudflare.com/pump-status"
UPDATE_URL = "https://cause-tokyo-involves-several.trycloudflare.com/update-sensor"
CHECK_INTERVAL = 5

# ‚úÖ ‡∏Ç‡∏≤ analog ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô
soil = ADC(Pin(34))
soil.atten(ADC.ATTN_11DB)   # ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ä‡πà‡∏ß‡∏á‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏∂‡∏á ~3.3V
soil.width(ADC.WIDTH_12BIT) # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î 12 ‡∏ö‡∏¥‡∏ï (0‚Äì4095)

# ‚úÖ ‡∏Ç‡∏≤‡∏£‡∏µ‡πÄ‡∏•‡∏¢‡πå
RELAY_PINS = [15, 22]
RELAY_ACTIVE_LOW = True

def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    if not wlan.isconnected():
        print("üîå Connecting to WiFi...")
        wlan.connect(SSID, PASSWORD)
        timeout = 15
        while not wlan.isconnected() and timeout > 0:
            print(".", end="")
            time.sleep(1)
            timeout -= 1
        print()
    if wlan.isconnected():
        print("‚úÖ WiFi Connected:", wlan.ifconfig()[0])
        return True
    else:
        print("‚ùå Failed to connect WiFi")
        return False

def read_moisture():
    analog = soil.read()
    moisture = 100 - int((analog / 4095) * 100)
    print(f"Analog: {analog} | ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô: {moisture} %")
    return moisture

def main():
    if not connect_wifi():
        return

    relays = [Pin(pin, Pin.OUT) for pin in RELAY_PINS]
    for r in relays:
        r.value(1 if RELAY_ACTIVE_LOW else 0)

    while True:
        try:
            # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ sensor
            moisture = read_moisture()
            temperature = 0  # ‡πÑ‡∏°‡πà‡∏°‡∏µ sensor ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ ‡πÉ‡∏ä‡πâ 0 ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô

            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• sensor ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Server
            try:
                urequests.post(UPDATE_URL, json={
                    "temperature": temperature,
                    "moisture": moisture
                })
                print(f"üì° Sent sensor ‚Üí Temp: {temperature} ¬∞C | Moisture: {moisture}%")
            except Exception as e:
                print("‚ö†Ô∏è ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ sensor ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:", e)

            # ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡πä‡∏°‡∏à‡∏≤‡∏Å server
            response = urequests.get(SERVER_URL)
            if response.status_code == 200:
                data = response.json()
                for i, r in enumerate(relays):
                    status = data.get(f"pump{i+1}", False)
                    r.value(0 if status and RELAY_ACTIVE_LOW else 1)
                print("üíß Pump Status:", data)
            response.close()

        except Exception as e:
            print("‚ùå Error:", e)
        time.sleep(CHECK_INTERVAL)

main()
